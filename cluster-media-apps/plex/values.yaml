plex:
  controller:
    enabled: true
  runtimeClassName: nvidia
  env:
    # cat /config/Library/Application\ Support/Plex\ Media\ Server/Preferences.xml | tr " " "\n" | \
    # sed -n '/<Preferences/,$p' | tail -n +2 | sed 's,/>,,g' | \
    # sed '/\(OldestPreviousVersion\|MachineIdentifier\|^PlexOnline\|Certificate\|PubSub\|NeedsUpdate\)/d' | \
    # sed 's/"//g' | awk '{print "PLEX_PREFERENCE_"i++": \""$0"\""}'
    TZ: Europe/Zurich
    PLEX_UID: 666
    PLEX_GID: 666
    PLEX_CLAIM: "claim-z6APwzcuTys17_L4tSSc"
    NVIDIA_VISIBLE_DEVICES: all
    NVIDIA_DRIVER_CAPABILITIES: all

  persistence:
    config:
      enabled: true
      nameOverride: "-"
      type: pvc
      size: 20Gi
      accessMode: ReadWriteOnce
      retain: true
    transcode:
      enabled: true
      type: emptyDir
      mountPoint: /transcode
#    tv:
#      enabled: true
#      type: pvc
#      size: 1024Gi
#      accessMode: ReadWriteMany
#      retain: true
#      mountPath: /mnt/media/tv
    tv-abcd:
      enabled: true
      readonly: true
      type: pvc
      size: 256Gi
      accessMode: ReadWriteMany
      retain: true
      mountPath: /mnt/media/tv-abcd
    tv-efgh:
      enabled: true
      readonly: true
      type: pvc
      size: 256Gi
      accessMode: ReadWriteMany
      retain: true
      mountPath: /mnt/media/tv-efgh
    tv-mnop:
      enabled: true
      readonly: true
      type: pvc
      size: 300Gi
      accessMode: ReadWriteMany
      retain: true
      mountPath: /mnt/media/tv-mnop
    tv-qrst:
      enabled: true
      readonly: true
      type: pvc
      size: 300Gi
      accessMode: ReadWriteMany
      retain: true
      mountPath: /mnt/media/tv-qrst
    tv-uhd:
      enabled: true
      readonly: true
      type: pvc
      size: 300Gi
      storageClass: longhorn-nfs-v1
      accessMode: ReadWriteMany
      retain: true
      mountPath: /mnt/media/tv-uhd
    tv2:
      enabled: true
      readonly: true
      type: hostPath
      hostPath: /mnt/media/tvshows
      hostPathType: Directory
      mountPath: /mnt/media/tv2
#    tv-all:
#      enabled: true
#      readonly: true
#      type: pvc
#      size: 2Ti
#      storageClass: truenas-nfs
#      accessMode: ReadWriteMany
#      retain: true
#      mountPath: /mnt/media/tv-all
    movies:
      enabled: true
      readonly: true
      type: pvc
      size: 200Gi
      # storageClass: longhorn-nolock-nfs
      accessMode: ReadWriteMany
      retain: true
      mountPath: /mnt/media/movies
    movies-uhd:
      enabled: true
      readonly: true
      type: pvc
      size: 300Gi
      storageClass: longhorn-nfs-v1
      accessMode: ReadWriteMany
      retain: true
      mountPath: /mnt/media/movies-uhd
    movies2:
      enabled: true
      readonly: true
      type: hostPath
      hostPath: /mnt/media/movies
      hostPathType: Directory
      mountPath: /mnt/media/movies2
    audiobooks:
      enabled: true
      readonly: true
      type: pvc
      size: 50Gi
      accessMode: ReadWriteMany
      retain: true
      mountPath: /mnt/media/audiobooks
    tls-certs:
      enabled: true
      type: secret
      name: plex-framsburg-ch-tls-external
      mountPath: /secrets
      items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.pk12

  podSecurityContext:
    runAsUser: 666
    runAsGroup: 666
    fsGroup: 666
    fsGroupChangePolicy: Always
  probes:
    liveness:
      enabled: false
      custom: true
      spec:
        initialDelaySeconds: 60
        periodSeconds: 60
        exec:
          command:
            - cat
            - /tv/healthcheck
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                  - k3sworker07
#    nodeAffinity:
#      preferredDuringSchedulingIgnoredDuringExecution:
#        - weight: 50
#          preference:
#            matchExpressions:
#              - key: performance
#                operator: In
#                values:
#                  - medium

  ingress:
    main:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: plex-svc-plex-headers@kubernetescrd
      ingressClassName: traefik
      hosts:
        - host: plex.framsburg.ch
          paths:
            - path: /
              pathType: Prefix
              service:
                name: plex
      tls:
        - hosts: [plex.framsburg.ch]
          secretName: plex-framsburg-ch-tls

    external:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        # traefik.ingress.kubernetes.io/router.entrypoints: websecure
        # traefik.ingress.kubernetes.io/router.middlewares: plex-svc-plex-headers@kubernetescrd
      ingressClassName: nginx
      hosts:
        - host: plex.framsburg.ch
          paths:
            - path: /
              pathType: Prefix
              service:
                name: plex
      tls:
        - hosts: [plex.framsburg.ch]
          secretName: plex-framsburg-ch-tls-external
  resources:
    requests:
      cpu: 500m
      memory: 256Mi
    limits:
      cpu: 4
      memory: 16384Mi
      nvidia.com/gpu: 1
