argo-cd:
  configs:
    repositories:
      stable-helm-repo:
        name: stable
        type: helm
        url: https://charts.helm.sh/stable
      jetstack-helm-repo:
        name: jetstack
        type: helm
        url: https://charts.jetstack.io
      rancher-latest-helm-repo:
        name: rancher-latest
        type: helm
        url: https://releases.rancher.com/server-charts/latest
  redis-ha:
    enabled: true
    exporter:
      enabled: false
  
  controller:
    enableStatefulSet: true

  dex:
    enabled: false

  server:
    # autoscaling:
    #   enabled: true
    #   minReplicas: 2
    replicas: 2
    env:
      - name: ARGOCD_API_SERVER_REPLICAS
        value: '2'

    extraArgs:
      - --insecure
    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      hosts:
        - argocd.framsburg.ch
      tls:
        - hosts:
          - argocd.framsburg.ch
          secretName: argocd-framsburg-ch-tls
    # config:
    #   url: https://argocd.framsburg.ch
    #   oidc.config: | 
    #       name: Authentik
    #       issuer: "https://authentik.framsburg.ch/application/o/argocd/"
    #       clientID: "c579d3195f85aeccaf1ecce35ef5501e023c2a6a"
    #       clientSecret: "$oidc:oidc.authentik.clientSecret"
    #       requestedScopes: ["openid", "profile", "email"]
    #       logoutURL: "https://authentik.framsburg.ch/if/session-end/argocd/"
    rbacConfig:
      policy.default: role:readonly
      policy.csv: |
          g, fb-admins, role:admin
    # volumeMounts:
    #   - name: 'secrets-store-inline'
    #     mountPath: '/mnt/secrets-store'
    #     readOnly: true
    # volumes:
    #   - name: secrets-store-inline
    #     csi:
    #       driver: 'secrets-store.csi.k8s.io'
    #       readOnly: true
    #       volumeAttributes:
    #         secretProviderClass: 'vault-argocd'

  controller:
    args:
      repoServerTimeoutSeconds: '120'
      selfHealTimeout: '15'

  repoServer:
    replicas: 2
    # autoscaling:
    #   enabled: true
    #   minReplicas: 2
    env:
      - name: ARGOCD_EXEC_TIMEOUT
        value: '240s'

  applicationSet:
    enabled: true
    image:
      repository: docker.io/baloisemichaelmuehlebach/argocd-applicationset
      tag: v0.4.1
