argo-cd:
  global:
    image:
      tag: v2.3.0
  configs:
    repositories:
      stable-helm-repo:
        name: stable
        type: helm
        url: https://charts.helm.sh/stable
      jetstack-helm-repo:
        name: jetstack
        type: helm
        url: https://charts.jetstack.io
      bitnami-helm-repo:
        name: bitnami
        type: helm
        url: https://charts.bitnami.com/bitnami
      dex-helm-repo:
        name: dex
        type: helm
        url: https://charts.dexidp.io
      rancher-latest-helm-repo:
        name: rancher-latest
        type: helm
        url: https://releases.rancher.com/server-charts/latest
  dex:
    enabled: false
  
  server:
    extraArgs:
      - --insecure
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "traefik"
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      hosts:
        - argocd.framsburg.ch
      tls:
        - hosts:
          - argocd.framsburg.ch
          secretName: argocd-framsburg-ch-tls
    # additionalApplications:
    #   - name: bootstrap
    #     namespace: argocd-system
    #     finalizers:
    #       - resources-finalizer.argocd.argoproj.io
    #     destination:
    #       namespace: argocd-system
    #       server: https://kubernetes.default.svc
    #     project: default
    #     source:
    #       path: bootstrap/
    #       repoURL: https://github.com/mikevader/k3s-apps-root-config.git
    #       targetRevision: master
    #     syncPolicy:
    #       automated:
    #         prune: true
    #         selfHeal: true
    config:
      url: https://argocd.framsburg.ch
      oidc.config: | 
        name: Authentik
        issuer: https://authentik.framsburg.ch/application/o/argocd/
        clientID: c579d3195f85aeccaf1ecce35ef5501e023c2a6a
        clientSecret: $oidc:client-secret
        logoutURL: https://authentik.framsburg.ch/if/session-end/argocd/

    volumeMounts:
      - name: 'secrets-store-inline'
        mountPath: '/mnt/secrets-store'
        readOnly: true
    volumes:
      - name: secrets-store-inline
        csi:
          driver: 'secrets-store.csi.k8s.io'
          readOnly: true
          volumeAttributes:
            secretProviderClass: 'vault-argocd'

  controller:
    args:
      repoServerTimeoutSeconds: '120'
      selfHealTimeout: '15'

  repoServer:
    env:
      - name: ARGOCD_EXEC_TIMEOUT
        value: '240s'

applicationset:
  fullnameOverride: applicationset
  image:
    repository: docker.io/baloisemichaelmuehlebach/argocd-applicationset
    tag: v0.2.0
