---
global:
  cluster: framsburg

# addons:
#   spc:
#     enabled: true
#     defaultObjectPath: 'k8s/framsburg/dex'
#     secretObjects: true
#     objects:
#       - name: client-id
#       - name: client-secret
#     # extraSecretObjects:
#     #   - type: Opaque
#     #     secretName: github-client-conf
#     #     data:
#     #       - key: id
#     #         objectName: client-id
#     #       - key: secret
#     #         objectName: client-secret

dex:
  envVars:
    - name: GITHUB_CLIENT_ID
      valueFrom:
        secretKeyRef:
          name: oidc
          key: id
    - name: GITHUB_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: oidc
          key: secret
  envFrom:
    - secretRef:
        name: oidc
  config:
    # Set it to a valid URL
    issuer: 'https://dex.framsburg.ch'

    # See https://dexidp.io/docs/storage/ for more options
    storage:
      type: memory

    # Enable at least one connector
    # See https://dexidp.io/docs/connectors/ for more options
    enablePasswordDB: true
    connectors:
      - type: github
        # Required field for connector id.
        id: github
        # Required field for connector name.
        name: GitHub
        config:
          # Credentials can be string literals or pulled from the environment.
          clientID: $id
          clientSecret: $secret
          redirectURI: "https://dex.framsburg.ch/callback"

          # Optional organizations and teams, communicated through the "groups" scope.
          #
          # NOTE: This is an EXPERIMENTAL config option and will likely change.
          #
          # Legacy 'org' field. 'org' and 'orgs' cannot be used simultaneously. A user
          # MUST be a member of the following org to authenticate with dex.
          # org: my-organization
          #
          # Dex queries the following organizations for group information if the
          # "groups" scope is provided. Group claims are formatted as "(org):(team)".
          # For example if a user is part of the "engineering" team of the "coreos"
          # org, the group claim would include "coreos:engineering".
          #
          # If orgs are specified in the config then user MUST be a member of at least one of the specified orgs to
          # authenticate with dex.
          #
          # If neither 'org' nor 'orgs' are specified in the config and 'loadAllGroups' setting set to true then user
          # authenticate with ALL user's Github groups. Typical use case for this setup:
          # provide read-only access to everyone and give full permissions if user has 'my-organization:admins-team' group claim.  
          orgs:
          - name: my-organization
            # Include all teams as claims.
          - name: my-organization-with-teams
            # A white list of teams. Only include group claims for these teams.
            teams:
            - red-team
            - blue-team
          # Flag which indicates that all user groups and teams should be loaded.
          loadAllGroups: false

          # Optional choice between 'name' (default), 'slug', or 'both'.
          #
          # As an example, group claims for member of 'Site Reliability Engineers' in
          # Acme organization would yield:
          #   - ['acme:Site Reliability Engineers'] for 'name'
          #   - ['acme:site-reliability-engineers'] for 'slug'
          #   - ['acme:Site Reliability Engineers', 'acme:site-reliability-engineers'] for 'both'
          teamNameField: slug
          # flag which will switch from using the internal GitHub id to the users handle (@mention) as the user id.
          # It is possible for a user to change their own user name but it is very rare for them to do so
          useLoginAsID: false

  ingress:
    enabled: true
    ingressClassName: traefik

    annotations:
      kubernetes.io/ingress.class: "traefik"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      traefik.ingress.kubernetes.io/router.entrypoints: websecure

    hosts:
      - host: 'dex.framsburg.ch'
        paths:
          - path: '/'
            pathType: Prefix

    tls:
      - secretName: 'dex-framsburg-ch-tls'
        hosts: ['dex.framsburg.ch']

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 128Mi

  volumeMounts:
    - name: 'secrets-store-inline'
      mountPath: '/mnt/secrets-store'
      readOnly: true
  volumes:
    - name: secrets-store-inline
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: vault-dex
