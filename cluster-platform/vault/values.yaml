global:
  domainName: vault.framsburg.ch

vault:
  dataStorage:
    storageClass: longhorn

  csi:
    enabled: true
  injector:
    enabled: false

  ui:
    enabled: true

  server:
    dev:
      enabled: true
    # image:
    #   repository: "vault"
    #   tag: "1.9.1"
    #   pullPolicy: IfNotPresent
    postStart:
      - /bin/sh
      - -ec
      - >
        sleep 5;
        vault auth enable kubernetes;
        vault write auth/kubernetes/config token_reviewer_jwt="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" kubernetes_host="$KUBERNETES_PORT_443_TCP_ADDR:443" kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    ingress:
      enabled: true
      pathType: Prefix
      ingressClassName: traefik
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.priority: "10"
      hosts:
        - host: vault.framsburg.ch
          paths: [/]
      tls:
        - hosts: [vault.framsburg.ch]
          secretName: vault-framsburg-ch-tls
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - k3smaster2
                    - k3smaster3
    readinessProbe:
      initialDelaySeconds: 20
      periodSeconds: 10
      timeoutSeconds: 8
    livenessProbe:
      enabled: true
      periodSeconds: 10
      timeoutSeconds: 8
    resources:
      requests:
        cpu: 200m
        memory: 128Mi
      limits:
        cpu: 400m
        memory: 256Mi

