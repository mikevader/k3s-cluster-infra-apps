apiVersion: "vault.banzaicloud.com/v1alpha1"
kind: "Vault"
metadata:
  name: "vault"
spec:
  size: 3
  image: vault:1.10.4
  bankVaultsImage: ghcr.io/banzaicloud/bank-vaults:latest

  # annotations:
  #   vault.security.banzaicloud.io/vault-addr: "http://vault.vault.svc:8200"
  #   vault.security.banzaicloud.io/vault-path: "kubernetes"
  #   vault.security.banzaicloud.io/vault-role: "vault"
  #   vault.security.banzaicloud.io/vault-skip-verify: "true"
  # vaultAnnotations:
  #   vault.security.banzaicloud.io/vault-addr: "http://vault.vault.svc:8200"
  #   vault.security.banzaicloud.io/vault-path: "kubernetes"
  #   vault.security.banzaicloud.io/vault-role: "vault"
  #   vault.security.banzaicloud.io/vault-skip-verify: "true"
  # vaultConfigurerAnnotations:
  #   vault.security.banzaicloud.io/vault-addr: "http://vault.vault.svc:8200"
  #   vault.security.banzaicloud.io/vault-path: "kubernetes"
  #   vault.security.banzaicloud.io/vault-role: "vault"
  #   vault.security.banzaicloud.io/vault-skip-verify: "true"

  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: {{ .Release.Name | quote }}

  # Specify the ServiceAccount where the Vault Pod and the Bank-Vaults configurer/unsealer is running
  serviceAccount: vault

  # Request an Ingress controller with the default configuration
  ingress:
    # Specify Ingress object annotations here, if TLS is enabled (which is by default)
    # the operator will add NGINX, Traefik and HAProxy Ingress compatible annotations
    # to support TLS backends
    annotations:
      kubernetes.io/ingress.class: "traefik"
      ingress.kubernetes.io/protocol: https
      cert-manager.io/cluster-issuer: letsencrypt-prod
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    # Override the default Ingress specification here
    # This follows the same format as the standard Kubernetes Ingress
    # See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#ingressspec-v1beta1-extensions
    spec:
      rules:
        - host: 'vault.framsburg.ch'
          http:
            paths:
              - path: ''
                pathType: ImplementationSpecific
                backend:
                  service:
                    name: vault
                    port:
                      number: 8200
      tls:
        - hosts: ['vault.framsburg.ch']
          secretName: 'vault-framsburg-ch-tls'

  # A YAML representation of a final vault config file.
  # See https://www.vaultproject.io/docs/configuration/ for more information.
  config:
    storage:
      raft:
        path: /vault/file
    listener:
      tcp:
        address: "0.0.0.0:8200"
        # Uncommenting the following line and deleting tls_cert_file and tls_key_file disables TLS
        tls_disable: true
        # tls_cert_file: /vault/tls/server.crt
        # tls_key_file: /vault/tls/server.key
    telemetry:
      statsd_address: localhost:9125
    api_addr: http://vault.vault.svc:8200
    cluster_addr: "http://${.Env.POD_NAME}:8201"
    ui: true

  # See: https://banzaicloud.com/docs/bank-vaults/cli-tool/#example-external-vault-configuration
  # The repository also contains a lot examples in the deploy/ and operator/deploy directories.
  externalConfig:
    policies:
      - name: allow_secrets
        rules: path "secret/*" {
          capabilities = ["create", "read", "update", "delete", "list"]
          }
    auth:
      - type: kubernetes
        roles:
          # Allow every pod in the default namespace to use the secret kv store
          - name: default
            bound_service_account_names: ["default", "vault-infra-vault-secrets-webhook", "vault"]
            bound_service_account_namespaces: ["default", "vault-infra"]
            policies: ["allow_secrets", "allow_pki"]
            ttl: 1h
          - name: grafana
            bound_service_account_names: ["*"] # ["default", "monitoring-stack-grafana"]
            bound_service_account_namespaces: ["*"] # ["monitoring-stack"]
            policies: ["allow_secrets"]
            ttl: 1h
          - name: argocd
            bound_service_account_names: ["*"] # ["default", "argocd-server"]
            bound_service_account_namespaces: ["*"] # ["argocd-system"]
            policies: ["allow_secrets"]
            ttl: 1h
          - name: vault
            bound_service_account_names: ["*"] # ["default", "argocd-server"]
            bound_service_account_namespaces: ["*"] # ["argocd-system"]
            policies: ["allow_secrets"]
            ttl: 1h
          - name: test
            bound_service_account_names: ["default", "vault-infra-vault-secrets-webhook", "vault", "webapp-sa"]
            bound_service_account_namespaces: ["default", "vault-infra", "test"]
            policies: ["allow_secrets"]
            ttl: 1h

      - type: oidc
        config:
          role_type: oidc
          oidc_discovery_url: "${env `OIDC_DISCOVERY_URL`}"
          oidc_client_id: "${env `OIDC_CLIENT_ID`}"
          oidc_client_secret: "${env `OIDC_CLIENT_SECRET`}"
          allowed_redirect_uris: "https://vault.framsburg.ch"
          default_role: default

        roles:
          - name: default
            oidc_scopes: ["openid", "profile", "email"]
            user_claim: sub
            policies: allow_secrets

    secrets:
      - path: secret
        type: kv
        description: General secrets.
        options:
          version: 2

  vaultEnvsConfig:
    - name: VAULT_LOG_LEVEL
      value: info

  envsConfig:
    - name: OIDC_CLIENT_ID
      valueFrom:
        secretKeyRef:
          name: vault-oidc-secret
          key: oidc-id
    - name: OIDC_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: vault-oidc-secret
          key: oidc-secret
    - name: OIDC_DISCOVERY_URL
      value: https://authentik.framsburg.ch/application/o/vault/

  serviceRegistrationEnabled: true

  resources:
    # A YAML representation of resource ResourceRequirements for vault container
    # Detail can reference: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container
    vault:
      limits:
        memory: "512Mi"
        cpu: "200m"
      requests:
        memory: "256Mi"
        cpu: "100m"

  volumeMounts:
    - name: vault-raft
      mountPath: /vault/file

  volumeClaimTemplates:
    - metadata:
        name: vault-raft
      spec:
        accessModes:
          - ReadWriteOnce
        volumeMode: Filesystem
        resources:
          requests:
            storage: 1Gi

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oidc-reviewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:service-account-issuer-discovery
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:unauthenticated
