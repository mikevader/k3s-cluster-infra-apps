global:
  domainName: authentik.framsburg.ch

authentik:
  image:
    tag: 2022.3.3
  authentik:
    secret_key: dontjudgemethisisjustfortesting    # TODO
    postgresql:
      password: "IKnowThisIsNotASecurePasswordJust4Testing"    # TODO
    redis:
      host: '{{ .Release.Name }}-redis'

  env:

  envValueFrom:
    AUTHENTIK_SECRET_KEY:
      secretKeyRef:
        name: oidc
        key: clientId
    AUTHENTIK_POSTGRESQL__USER:
      secretKeyRef:
        name: oidc
        key: clientId
    AUTHENTIK_POSTGRESQL__PASSWORD:
      secretKeyRef:
        name: oidc
        key: clientId

  ingress:
    enabled: true
    # ingressClassName: traefik
    annotations:
      kubernetes.io/ingress.class: "traefik"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    hosts:
      - host: 'authentik.framsburg.ch'
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: 'authentik-framsburg-ch-tls'
        hosts: ['authentik.framsburg.ch']

  volumeMounts:

  volumes:

postgresql:
#  image:
#    tag: 13.5-alpine
  env:
    - name: POSTGRES_USER
      valueFrom:
        secretKeyRef:
          name: mysecret
          key: username
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          name:
          key:
    - name: POSTGRES_DB
      valueFrom:
        secretKeyRef:
          name:
          key:
    - name: USERDB_USER
      valueFrom:
        secretKeyRef:
          name:
          key:
    - name: USERDB_PASSWORD
      valueFrom:
        secretKeyRef:
          name:
          key:

  env:
    - name: POSTGRES_PASSWORD
      value: "IKnowThisIsNotASecurePasswordJust4Testing"
  settings:
    authMethod: 'md5'
    superuser: 'postgres'
    superuserPassword: "IKnowThisIsNotASecurePasswordJust4Testing"
  userDatabase:
    name: "authentik"
    user: "authentik"
    password: "IKnowThisIsNotASecurePasswordJust4Testing"

  extraSecrets:
    - name: 'secrets-store-inline'
      mountPath: '/mnt/secrets-store'
  storage:
    className: longhorn
    requestedSize: 10Gi
  podSecurityContext:
    fsGroupChangePolicy: "OnRootMismatch"
redis:
  storage:
    className: longhorn
    requestedSize: 10Gi
