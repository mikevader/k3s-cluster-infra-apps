operator:
  configGeneral: {}

  configMajorVersionUpgrade:
    major_version_upgrade_mode: "manual"

  configKubernetes:
    enable_cross_namespace_secret: true
    enable_pod_antiaffinity: true
    pod_environment_configmap: "postgres-operator/pod-config"
    pod_environment_secret: "pod-secrets"
    node_readiness_label:
      performance: medium

  configAwsOrGcp:
    aws_region: us-east-1
    wal_s3_bucket: postgres-backups
    kube_iam_role: postgres-pod-role

  configLogicalBackup:
    logical_backup_s3_access_key_id: ''
    logical_backup_s3_bucket: 'postgres-logical-backups'
    logical_backup_s3_region: 'us-east-1'
    logical_backup_s3_endpoint: 'https://minio.framsburg.net'
    logical_backup_s3_retention_time: "2 week"
    logical_backup_schedule: "*/30 * * * *"

  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 50
          preference:
            matchExpressions:
              - key: performance
                operator: In
                values:
                  - medium

# ui:
#   envs:
#     # IMPORTANT: While operator chart and UI chart are independent, this is the interface between
#     # UI and operator API. Insert the service name of the operator API here!
#     appUrl: "https://postgres.framsburg.ch"
#     operatorApiUrl: "http://postgres-operator.postgres-operator.svc:8080"
#     operatorClusterNameLabel: "cluster-name"
#     resourcesVisible: "True"
#     targetNamespace: "postgres-operator"
#     teams:
#       - "acid"

#   extraEnvs:
#     - name: AWS_ENDPOINT
#       value: https://minio.framsburg.net
#     - name: WALE_S3_ENDPOINT
#       value: https+path://minio.framsburg.net
#     - name: AWS_ACCESS_KEY_ID
#       valueFrom:
#         secretKeyRef:
#           name: "pod-secrets"
#           key: AWS_ACCESS_KEY_ID
#     - name: AWS_SECRET_ACCESS_KEY
#       valueFrom:
#         secretKeyRef:
#           name: "pod-secrets"
#           key: AWS_SECRET_ACCESS_KEY
#     - name: AWS_DEFAULT_REGION
#       value: "us-east-1"
#     - name: SPILO_S3_BACKUP_BUCKET
#       value: "postgres-backups"

#   ingress:
#     enabled: true
#     annotations:
#       cert-manager.io/cluster-issuer: letsencrypt-prod
#       traefik.ingress.kubernetes.io/router.entrypoints: websecure
#     ingressClassName: traefik
#     hosts:
#       - host: postgres.framsburg.ch
#         paths: [""]
#     tls:
#      - secretName: postgres-framsburg-ch-tls
#        hosts:
#          - postgres.framsburg.ch
