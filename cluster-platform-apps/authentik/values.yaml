authentik:
  global:
    deploymentAnnotations:
      "sidecar.jaegertracing.io/inject": "true"

    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
                - key: performance
                  operator: In
                  values:
                    - medium

  authentik:
    secret_key: dontjudgemethisisjustfortesting    # TODO
    postgresql:
      password: "IKnowThisIsNotASecurePasswordJust4Testing"    # TODO
    redis:
      host: '{{ .Release.Name }}-redis'

  server:
    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      hosts:
        - 'authentik.framsburg.ch'
      tls:
        - secretName: 'authentik-framsburg-ch-tls'
          hosts: ['authentik.framsburg.ch']

postgresql:
#  image:
#    tag: 13.5-alpine
  env:
    - name: POSTGRES_PASSWORD
      value: "IKnowThisIsNotASecurePasswordJust4Testing"
  settings:
    authMethod: 'md5'
    superuser: 'postgres'
    superuserPassword: "IKnowThisIsNotASecurePasswordJust4Testing"
  userDatabase:
    name: "authentik"
    user: "authentik"
    password: "IKnowThisIsNotASecurePasswordJust4Testing"
  storage:
    className: longhorn
    requestedSize: 10Gi
  podSecurityContext:
    fsGroupChangePolicy: "OnRootMismatch"
redis:
  useDeploymentWhenNonHA: false
  revisionHistoryLimit: 0
  storage:
    className: longhorn
    requestedSize: 10Gi

postgresql16:
  settings:
    existingSecret: database-secret
    superuser:
      secretKey: superuserUsername
    superuserPassword:
      secretKey: superuserPassword

  userDatabase:
    existingSecret: database-secret
    name:
      secretKey: databaseName
    user:
      secretKey: databaseUsername
    password:
      secretKey: databasePassword
  storage:
    className: longhorn
    requestedSize: 10Gi
