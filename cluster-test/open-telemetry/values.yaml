opentelemetry-demo:
  opentelemetry-collector:
    config:
#      service:
#        pipelines:
#          traces:
#            processors: [memory_limiter, resource, batch]
#            exporters: [otlp, debug, spanmetrics]
#          metrics:
#            receivers: [otlp, spanmetrics]
#            processors: [memory_limiter, filter/ottl, transform, resource, batch]
#            exporters: [otlphttp/prometheus, debug]
      connectors:
        spanmetrics:
          histogram:
            explicit:
              buckets: [ 100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms ]
          dimensions:
            - name: http.method
              default: GET
            - name: http.status_code
          exemplars:
            enabled: true
          exclude_dimensions: [ 'status.code' ]
          dimensions_cache_size: 1000
          aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"
          metrics_flush_interval: 15s
          events:
            enabled: true
            dimensions:
              - name: exception.type
              - name: exception.message
      service:
        extensions: [health_check, memory_ballast]
        pipelines:
          logs:
            exporters: [debug]
            processors: [k8sattributes, memory_limiter, batch]
            receivers: [otlp]
          traces:
            receivers: [otlp, jaeger, zipkin]
            processors: [k8sattributes, memory_limiter, resource, batch]
            exporters: [otlp, debug, spanmetrics]
          metrics:
            receivers: [otlp, spanmetrics]
            processors: [k8sattributes, memory_limiter, filter/ottl, transform, resource, batch]
            exporters: [otlphttp/prometheus, debug]
