firefly:
  firefly-db:
    enabled: false


  firefly-iii:
    image:
      tag: "version-6.0.19"
      pullPolicy: Always

    config:
      env:
        APP_URL: 'https://firefly2.framsburg.ch'
        DB_CONNECTION: pgsql
        DB_HOST: firefly-test2-rw.firefly.svc
        DB_PORT: "5432"
        DB_DATABASE: app
        DEFAULT_LANGUAGE: "en_US"
        DEFAULT_LOCALE: "equal"
        TZ: "Europe/Zurich"
        TRUSTED_PROXIES: "**"
    
      envValueFrom:
        DB_USERNAME:
          secretKeyRef:
            name: firefly-test2-app
            key: username
        DB_PASSWORD:
          secretKeyRef:
            name: firefly-test2-app
            key: password

    # -- Create a new Secret from values file to store sensitive environment variables. Make sure to keep your secrets encrypted in the repository! For example, you can use the 'helm secrets' plugin (https://github.com/jkroepke/helm-secrets) to encrypt and manage secrets. If the 'config.existingSecret' value is set, a new Secret will not be created.
    secrets:
      env:
        APP_KEY: 'SomeRandomStringOf32CharsExactly'
        APP_PASSWORD: "CHANGE_ENCRYPT_ME"

    nodeSelector:
      kubernetes.io/arch: amd64

    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      className: traefik
      hosts:
        - 'firefly2.framsburg.ch'
      tls:
        - hosts: ['firefly2.framsburg.ch']
          secretName: 'firefly2-framsburg-ch-tls'

    resources:
      requests:
        cpu: 200m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi


  importer:
    enabled: true
    image:
      repository: "fireflyiii/data-importer@sha256"
      pullPolicy: Always
      tag: ""
      # tag: "develop" # "version-1.3.3"

    fireflyiii:
      url: 'https://firefly2.framsburg.ch'
      auth:
        accessToken: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiNDkzN2Q0YTM4ZmVhZjM4MmVmZmMwN2EyOTI4MzljM2E3NDBmNTAyMDY2MTk3ZmM4ZWUyOTkxZjIwZGM5MWM2ODcyMDlkNGQ2OWE1NjcxMTEiLCJpYXQiOjE2OTEzMDI5MDEuODg5ODQ0LCJuYmYiOjE2OTEzMDI5MDEuODg5ODQ0LCJleHAiOjE3MjI5MjUzMDEuODcxMjMsInN1YiI6IjEiLCJzY29wZXMiOltdfQ.B5dTEB4LCDtM8zqaVPkkXpxJJkAD2JLhL4V5GW8KKGrte21grkVmjANPmWXM_oHVoCYJGJVJZocEzuHaIMNf9WRIHzjtbRaI9t24jSn87BJtFy6XhYj6lQknuZFL2dxgTTNMymsMCnuhIA6D3erYioP7XJ-3pIa4UHnvO2F8K9zwBHT9L2FxmonsiyhQn1s2571TZkxFxlVSVKTbGNQgkCWvcQXQKyif_AFrDk6NGt6a9YQRlzi8cMzMUKD9k57jLFF__05XLNAvpVH-VAV5ZpDjuINvkydDLkKzkeNzdK2rHyfJ_Rv0m70p5c2mnnXUgyYvgZdpLUVsNZF8rFsj27rtu-AF3EY6b-NsqqqBoHYzvZFkCjCVZ1RJDfM8xKYPNuhbn6nEKqq_tmZYGo-ed8IM1HCmYk__jfKkjcOGdBoCOgkrhbMfnE8rWpwkbYz5wkGrZ1HjVadgMroPTwqzScQQ1LArBrRsVODljMH3rdaf10yKFJ_F0HW-idtlYocmfH9Sj1qmiXhVNTfTSPb1zUnxmmz3B7jktdnEqwXVQQyVGHSgqciFalNl-VddFg6a-WMB5X4aFgCl4gQ40hQzwW_h6wQDjhGfpy3dTxdjzkTsLoLtJiVXwh3RK3hdWqiaOfYiDnoq_TBM5wpAgnDl5rASVCjbBDyvyff0UQLejMA'

    nodeSelector:
      kubernetes.io/arch: amd64

    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: authentik-authentik@kubernetescrd
      className: traefik
      hosts:
        - 'firefly2import.framsburg.ch'
      tls:
        - hosts: ['firefly2import.framsburg.ch']
          secretName: 'firefly2import-framsburg-ch-tls'

    resources:
      requests:
        cpu: 200m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
